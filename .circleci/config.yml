# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          name: Restore gems cache
          keys:
            - v2-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: Install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          name: Save gems cache
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle

      - restore_cache:
          name: Restore Yarn cache
          keys:
            - v2-dependencies-yarn-{{ checksum "yarn.lock" }}
            - v2-dependencies-yarn

      - run:
          name: Install Yarn packages
          command: yarn install

      - save_cache:
          name: Save Yarn cache
          key: v2-dependencies-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules

  rubocop-check:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers

    working_directory: ~/repo

    steps:
      - checkout

      - run:
        name: RuboCop check
        command:
          bundle exec rubocop app test

  test:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          DATABASE_URL: postgres://postgres@127.0.0.1/autosave-test
      - image: circleci/postgres:11.4-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
          POSTGRES_DB: autosave-test

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          name: Restore gems cache
          keys:
            - v2-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: Install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - restore_cache:
          name: Restore Yarn cache
          keys:
            - v2-dependencies-yarn-{{ checksum "yarn.lock" }}
            - v2-dependencies-yarn

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - run:
          name: run tests
          command: bundle exec rake test

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy master to Heroku
          command:
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - rubocop-check
      - test:
          requires:
            - build
            - rubocop-check
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
